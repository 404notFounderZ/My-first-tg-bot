from aiogram.enums import ParseMode
from aiogram import Router, types

from Bot.running import SUPPORTED_FORMATS
from Bot.keyboard.inline_keyboard import get_keyboard, back_keyboard

router = Router()


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏
@router.callback_query(lambda c: c.data in ['convert_image', 'convert_currency',
                                            'make_qr', 'decode_qr'])
async def process_callback(callback_query: types.CallbackQuery):
    reply = callback_query.data
    if reply == 'convert_image':
        await callback_query.message.edit_text(
            '<b><i>‚ôªÔ∏è–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ç–æ –∏–ª–∏ —Ñ–∞–π–ª–æ–≤:</i></b>\n\n'
            '    –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —Ñ–∞–π–ª –∏ —É–∫–∞–∂–∏ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.\n'
            f'\n<b>üìå–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: {',  '.join(SUPPORTED_FORMATS)}.</b>\n\n',
            parse_mode=ParseMode.HTML, reply_markup=back_keyboard())

    elif reply == 'convert_currency':
        await callback_query.message.edit_text(
            '<b><i>üí±–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç:</i></b>\n\n'
            '    –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—É–º–º—ã –∏ –≤–∞–ª—é—Ç—ã, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–∏–≤ '
            '<u>–≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫</u> –≤ –Ω–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n '
            '<b>üìå–ù–∞–ø—Ä–∏–º–µ—Ä: !14.88$</b>\n\n'
            '    –¢–∞–∫–∂–µ —è –º–æ–≥—É –ø—Ä–∏—Å–ª–∞—Ç—å –≤–∞–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /rates',
            parse_mode=ParseMode.HTML, reply_markup=back_keyboard())

    elif reply == 'make_qr':
        await callback_query.message.edit_text(
            '<b><i>üì•–°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞:</i></b>\n\n'
            '    –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É –∏ —è —Å–æ–∑–¥–∞–º QR-–∫–æ–¥.\n\n',
            parse_mode=ParseMode.HTML, reply_markup=back_keyboard())

    elif reply == 'decode_qr':
        await callback_query.message.edit_text(
            '<b><i>üîí–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ QR-–∫–æ–¥–∞:</i></b>\n\n'
            '    –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ QR-–∫–æ–¥–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏ –∏ —è —Ä–∞—Å—à–∏—Ñ—Ä—É—é –µ–≥–æ.\n\n'
            '<b>üìå–¢–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ (—á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ) QR-–∫–æ–¥—ã.</b>',
            parse_mode=ParseMode.HTML, reply_markup=back_keyboard())

    await callback_query.answer()  # —É–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫–Ω–æ–ø–∫–∏


@router.callback_query(lambda c: c.data == 'return')
async def new_callback(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text(
        f'üëã–ü—Ä–∏–≤–µ—Ç!\n–Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç. –í—Å–µ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–º–µ—á–µ–Ω—ã –Ω–∏–∂–µ.',
        reply_markup=get_keyboard())
    await callback_query.answer()


@router.callback_query(lambda c: c.data == 'recognize_cmd')
async def rec_callback(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text(
        '   <b><i>üìù–†–∞—Å–ø–æ–∑–Ω–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —Ñ–æ—Ç–æ:</i></b>\n\n'
        '    –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –∏ –¥–æ–±–∞–≤—å –ø–æ–¥–ø–∏—Å—å <u>—Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å</u> –≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ '
        '–∏ —è —Å–º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç —Å –≤–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n\n',
        #'<b>üìå–§—É–Ω–∫—Ü–∏—è –µ—â—ë <u>—Å—ã—Ä–∞—è</u> –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞—Ç—å, –æ–±—É—á—É –µ—ë –ø–æ–ø–æ–∑–∂–µ.</b>',
        parse_mode=ParseMode.HTML, reply_markup=back_keyboard()
    )
    await callback_query.answer()
